<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_ui_action">
    <sys_ui_action action="INSERT_OR_UPDATE">
        <action_name>send_okta_verification</action_name>
        <active>true</active>
        <client>true</client>
        <client_script_v2><![CDATA[function onClick(g_form) {

}]]></client_script_v2>
        <comments/>
        <condition/>
        <form_action>true</form_action>
        <form_button>true</form_button>
        <form_button_v2>true</form_button_v2>
        <form_context_menu>false</form_context_menu>
        <form_link>false</form_link>
        <form_menu_button_v2>true</form_menu_button_v2>
        <form_style/>
        <hint/>
        <isolate_script>false</isolate_script>
        <list_action>false</list_action>
        <list_banner_button>false</list_banner_button>
        <list_button>false</list_button>
        <list_choice>false</list_choice>
        <list_context_menu>false</list_context_menu>
        <list_link>false</list_link>
        <list_save_with_form_button>false</list_save_with_form_button>
        <list_style/>
        <messages/>
        <name>Send Okta Verification</name>
        <onclick>verifyIfFactor(g_form.getValue('u_okta_factors'));</onclick>
        <order>1500</order>
        <script><![CDATA[//Send Okta Verification UI action

function verifyIfFactor(factor) {
    g_form.addInfoMessage('IN VERIFYIFFACTOR');
    var factor = factor ? JSON.parse(factor) : '';
    const factorType = factor != '' ? factor.type : '';
    const factorHref = factor != '' ? factor.href : '';
    const factorMethods = factor != '' ? factor.method : '';
    g_form.addInfoMessage('selected factor is |' + JSON.stringify(factor) + '|');
    g_form.addInfoMessage('selected factor HREF is |' + factorHref + '|');
    g_form.addInfoMessage('Factor Type is: ' + factorType);
    if (factorHref.indexOf('https:') > -1) { //if an href isn't selected, don't do anything
        //updateStatus(']]>😆<![CDATA[ starting verify function for factor: ' + g_form.getDisplayValue('u_okta_factors'));

        switch (factorType) {
            case 'push':
                updateStatus("Sending a Push Verification");
                doPushVerify(factorHref, true);
                break;
            case 'token:software:totp':
                var verificationCode = g_form.getValue('u_okta_verification');
                updateStatus("token verification, need to have a code in the verification box")
                if (verificationCode != '') {
                    doTokenVerify(factorHref, verificationCode);
                } else {
                    g_form.showFieldMsg('u_okta_verification', 'Error, enter the code before pushing the verification button!', 'error');
                }
                break;
            case 'sms':
                if (g_form.getValue('u_okta_verification_holding_area') != '' && g_form.getValue('u_okta_verification_holding_area').indexOf('https://') > -1) { //if the 'Okta Verification code' field has a number in it.. we want to call the verification code thing
                    doTokenVerify(g_form.getValue('u_okta_verification_holding_area'), g_form.getValue('u_okta_verification'));
                } else {
                    updateStatus("Sending a SMS verification...");
                    doPushVerify(factorHref, false);
                }
                break;
            default:
                updateStatus("Verification method isn't set up for this type yet");
                //doPush(factor);
                break;
        }
    } else {
        updateStatus(']]>😡<![CDATA[ choose a factor in the dropdown before clicking the verify button');
    }
}

function doPushVerify(link, doWeWantToPoll) { //sends a push verification to the href, and then polls the response URL
    var ga = new GlideAjax('global.OktaUserVerification');
    ga.addParam('sysparm_name', 'sendPushVerify');
    ga.addParam('sysparm_href', link);
    if (doWeWantToPoll == true) {
        ga.getXMLAnswer(verifyResponse); // The push verify will return a poll URL to see if it was successful or not.  No need for the full JSON payload for this
    } else {
        ga.getXMLAnswer(verifyResponseNoPoll);
    }
}

function doTokenVerify(link, code) {
    var ga = new GlideAjax('global.OktaUserVerification');
    ga.addParam('sysparm_name', 'sendTokenVerify');
    ga.addParam('sysparm_href', link);
    ga.addParam('sysparm_code', code);
    ga.getXMLAnswer(tokenResponse)
}

function verifyResponse(response) {
    g_form.addInfoMessage('response from sendPushVerify is: ' + response);
    updateStatus(']]>😐<![CDATA[ querying to see if the user hit the button');
    var gaPoll = new GlideAjax('global.OktaUserVerification');
    gaPoll.addParam('sysparm_name', 'poll');
    gaPoll.addParam('sysparm_href', response);
    gaPoll.getXMLAnswer(pollResponse);
}

function pollResponse(response) {
    g_form.addInfoMessage('response from polling ' + response);
    updateStatus(response);
}

function tokenResponse(response) {
    g_form.addInfoMessage('response from tokenResponse is: ' + response);
    updateStatus(response);
	g_form.setValue('work_notes', 'SMS verify successful');
}

function verifyResponseNoPoll(response) {
    //updateStatus(']]>😐<![CDATA[ ');
    g_form.addInfoMessage('response from verifyResponseNoPoll is: ' + response);
	response = JSON.parse(response);
	//updateStatus(response._links.verify.href);
	updateStatus('Enter in the SMS code from the user below');
	g_form.setValue('u_okta_verification_holding_area',response._links.verify.href);
    g_form.setDisplay('u_okta_verification', true);
}


function updateStatus(status) {
    g_form.setValue('u_okta_status', status);
}]]></script>
        <show_insert>true</show_insert>
        <show_multiple_update>false</show_multiple_update>
        <show_query>false</show_query>
        <show_update>true</show_update>
        <sys_class_name>sys_ui_action</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-01-17 00:36:57</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>6b35e6da07050110c7d1f6fd7c1ed06d</sys_id>
        <sys_mod_count>73</sys_mod_count>
        <sys_name>Send Okta Verification</sys_name>
        <sys_overrides/>
        <sys_package display_value="Okta User Verification" source="80b78bd307f40110c7d1f6fd7c1ed071">80b78bd307f40110c7d1f6fd7c1ed071</sys_package>
        <sys_policy/>
        <sys_scope display_value="Okta User Verification">80b78bd307f40110c7d1f6fd7c1ed071</sys_scope>
        <sys_update_name>sys_ui_action_6b35e6da07050110c7d1f6fd7c1ed06d</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-05-04 14:02:16</sys_updated_on>
        <table>incident</table>
        <ui11_compatible>true</ui11_compatible>
        <ui16_compatible>true</ui16_compatible>
    </sys_ui_action>
</record_update>
