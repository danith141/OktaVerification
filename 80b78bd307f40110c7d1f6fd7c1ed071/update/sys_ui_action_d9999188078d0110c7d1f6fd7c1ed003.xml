<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_ui_action">
    <sys_ui_action action="INSERT_OR_UPDATE">
        <action_name>get_okta_userid</action_name>
        <active>true</active>
        <client>true</client>
        <client_script_v2><![CDATA[function onClick(g_form) {

}]]></client_script_v2>
        <comments/>
        <condition/>
        <form_action>true</form_action>
        <form_button>true</form_button>
        <form_button_v2>false</form_button_v2>
        <form_context_menu>false</form_context_menu>
        <form_link>false</form_link>
        <form_menu_button_v2>false</form_menu_button_v2>
        <form_style/>
        <hint/>
        <isolate_script>false</isolate_script>
        <list_action>false</list_action>
        <list_banner_button>false</list_banner_button>
        <list_button>false</list_button>
        <list_choice>false</list_choice>
        <list_context_menu>false</list_context_menu>
        <list_link>false</list_link>
        <list_save_with_form_button>false</list_save_with_form_button>
        <list_style/>
        <messages/>
        <name>Get Okta UserID</name>
        <onclick>getUser(g_form.getValue('caller_id'))</onclick>
        <order>100</order>
        <script><![CDATA[function getUser(userRef) {
	
	var nvp = g_form.setValue('u_okta_nvp','{}');  //make empty object
	//if(g_form.getValue('u_okta_factors') != ''){
		g_form.clearOptions('u_okta_factors'); //clear the verification methods from the dropdown
		g_form.addOption('u_okta_factors','','-- None --');  //add --none-- back in so the UI policy will work with the verification field
	//}
	//g_form.addErrorMessage('trying to figure out name/value pair.. contents - ' + g_form.getValue('u_okta_nvp'));
	//g_form.addInfoMessage(userRef);
    var ga = new GlideAjax('global.OktaUserVerification');
    ga.addParam('sysparm_name', 'getOktaID');
    ga.addParam('sysparm_userref', userRef);
	updateStatus(']]>ðŸ˜Š<![CDATA[ Attempting to get OktaID for ' + g_form.getDisplayBox('caller_id').value);
    ga.getXML(ajaxResponse);
	
}

function ajaxResponse(response) {
    //var result = serverResponse.responseXML.getElementsByTagName("result");
	var answer = response.responseXML.documentElement.getAttribute("answer");
	updateStatus(']]>ðŸ˜Š<![CDATA[ OKTA ID response received: ' + answer);
	updateOktaLog(JSON.stringify(answer));
	
    // var message = result[0].getAttribute("message");
	g_form.setValue('u_okta_id',answer);
	updateStatus(']]>ðŸ˜Š<![CDATA[ querying okta for users\' factors');
	var gaFactors = new GlideAjax('global.OktaUserVerification');
		gaFactors.addParam('sysparm_name', 'getEnrolledFactors');
		gaFactors.addParam('sysparm_userId', answer);
	gaFactors.getXML(factors);
}

function factors(response) {
	var answer = response.responseXML.documentElement.getAttribute("answer");
	answer = JSON.parse(answer);
	g_scratchpad.factors = answer;
	updateStatus(']]>ðŸ˜Š<![CDATA[ user factors received..');
	updateOktaLog(answer);
	//g_form.addInfoMessage(answer);
	var factorsJson = {};
	answer.forEach(function (factor){
		/*
		if(factor.factorType == 'push'){
			g_form.addOption('u_okta_factors','push','Push');
		}
		if(factor.factorType == 'token:software:totp'){
			g_form.addOption('u_okta_factors','sms','SMS');
		}
		*/
		
		g_form.addOption('u_okta_factors',factor._links.verify.href,factor.factorType);  //this adds the factor to the list dropdown with the name = factor, value = href
		factorsJson[factor.factorType] = factor._links.verify.href; //this builds the json string that the 'name/value pair' variable uses to populate itself.// probably not needed except for debugging
	});
	//factorsJson = JSON.parse(factorsJson);
	//g_form.addInfoMessage(JSON.stringify(factorsJson)); //
	g_form.setValue('u_okta_nvp',JSON.stringify(factorsJson)); // probably not really needed.. except for debugging
}

function updateStatus(status){
	g_form.setValue('u_okta_status',status);
}

function updateOktaLog(update){
	var field = 'u_okta_log';
	var timeNow = '';//new GlideDateTime();  //would need a script include to get the time, or a display business rule
	var prevValue = g_form.getValue(field);
	var newValue = "-------------------------------\n" + timeNow + "\n"+ update + "\n" + prevValue;
	g_form.setValue(field,newValue);
}]]></script>
        <show_insert>true</show_insert>
        <show_multiple_update>false</show_multiple_update>
        <show_query>false</show_query>
        <show_update>true</show_update>
        <sys_class_name>sys_ui_action</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-01-09 19:18:33</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>d9999188078d0110c7d1f6fd7c1ed003</sys_id>
        <sys_mod_count>64</sys_mod_count>
        <sys_name>Get Okta UserID</sys_name>
        <sys_overrides/>
        <sys_package display_value="Okta User Verification" source="80b78bd307f40110c7d1f6fd7c1ed071">80b78bd307f40110c7d1f6fd7c1ed071</sys_package>
        <sys_policy/>
        <sys_scope display_value="Okta User Verification">80b78bd307f40110c7d1f6fd7c1ed071</sys_scope>
        <sys_update_name>sys_ui_action_d9999188078d0110c7d1f6fd7c1ed003</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-02-06 14:03:35</sys_updated_on>
        <table>incident</table>
        <ui11_compatible>true</ui11_compatible>
        <ui16_compatible>false</ui16_compatible>
    </sys_ui_action>
</record_update>
